C51 COMPILER V9.57.0.0   MYSELF                                                            02/28/2019 09:41:20 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MYSELF
OBJECT MODULE PLACED IN .\Objects\myself.obj
COMPILER INVOKED BY: D:\KEIL\ARM\C51\BIN\C51.EXE myself.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\SYSTEM;..\HARDWARE;..\USER)
                    - DEBUG OBJECTEXTEND PRINT(.\Listings\myself.lst) TABS(2) OBJECT(.\Objects\myself.obj)

line level    source

   1          #include "myself.h"
   2          #include  <STC15F2K60S2.h>
   3          #include  "Serial.h"//串口1(P3.0/RxD, P3.1/TxD)
   4          #include  "intrins.h"
   5          
   6          sbit s2=P1^1;        //TCS3200 S2 
   7          sbit s3=P1^0;        //TCS3200 S3
   8                               //TCS3200 S0 模块内部默认上拉
   9                               //TCS3200 S1 模块内部默认上拉
  10                               //TCS3200 OE 模块内部接地
  11          
  12          sbit test_pin=P1^2;  //用示波器看这个引脚，可知道定时器中断频率
  13          //变量、常量定义
  14          uchar ge,shi,bai;
  15          uchar rp=3,gp=3,bp=4; //定义比例因子，具体环境可以修改
  16          uchar count;          //颜色标志位（0:红 1:绿 2:蓝）
  17          
  18          ////显示数组
  19          //uchar disp_R[3];  //红
  20          //uchar disp_G[3];  //绿
  21          //uchar disp_B[3];  //蓝              
  22          
  23          u16 R = 0;
  24          u16 G = 0;
  25          u16 Bl = 0;
  26          
  27          
  28          //*********************************************
  29          //数值转换出个十百千的ASCII码
  30          //*********************************************
  31          //void conversion(uint temp_data)  
  32          //{  
  33          //    bai=temp_data/100+0x30 ;
  34          //    temp_data=temp_data%100;   //取余运算
  35          //    shi=temp_data/10+0x30 ;
  36          //    ge=temp_data%10+0x30;      //取余运算
  37          //}
  38          
  39          void DelayNms(int n)//延时Nms//@11.0592MHz
  40          {
  41   1        int i=0;
  42   1        for(i=0;i<n;i++) 
  43   1          Delay1ms();
  44   1      }
  45          
  46          void Delay1ms()   //@11.0592MHz
  47          {
  48   1        unsigned char i, j;
  49   1      
  50   1        _nop_();
  51   1        _nop_();
  52   1        _nop_();
  53   1        i = 11;
  54   1        j = 190;
C51 COMPILER V9.57.0.0   MYSELF                                                            02/28/2019 09:41:20 PAGE 2   

  55   1        do
  56   1        {
  57   2          while (--j);
  58   2        } while (--i);
  59   1      }
  60          
  61          void Timer0Init(void)   //10毫秒@11.0592MHz
  62          {
  63   1        AUXR &= 0x7F;   //定时器时钟12T模式
  64   1        TMOD &= 0xF0;   //设置定时器模式    //同时打开定时器1做计数器，计脉冲   P3.5
  65   1        TMOD|=0x40;
  66   1        TL0 = 0x00;   //设置定时初值
  67   1        TH0 = 0xDC;   //设置定时初值
  68   1        TL1 = 0x00;   
  69   1        TH1 = 0x00; 
  70   1        TF0 = 0;    //清除TF0标志
  71   1        
  72   1        
  73   1        EA=1;            //开总中断
  74   1        ET0=1;           //开定时器0中断
  75   1        
  76   1        TR0=1;           
  77   1        TR1=1;           //启动
  78   1      }
  79          
  80          /*******************************************
  81          * 函数名称: c10ms_out() 
  82          * 函数功能: 定时中断0服务程序
  83                      修改颜色标志disp_tc（0:红 1:绿 2:蓝）
  84                      设置S0 S1 S2 选择滤波器
  85                      计算脉冲，读取色值
  86          * 入口参数: 无
  87          * 出口参数: 无
  88          /********************************************/
  89          void Timer0Interrupt() interrupt 1 using 2 //定时器0的中断
  90          {
  91   1        u16 temp;
  92   1        test_pin=!test_pin; //测试定时器中断频率引脚，可以用示波器观察
  93   1        TR0=0;              //关闭定时
  94   1        TR1=0;              //关闭计数
  95   1      //  S1SendData(count);
  96   1        //   count+1实现先检测绿色,再检测蓝色,然后检测红色,循环检测       
  97   1        if(count==0)
  98   1        {
  99   2          count++;    
 100   2          s2=1;s3=1;             //选择滤波器为绿色     
 101   2          
 102   2          //  temp=(8<<TH1)+TL1;
 103   2          
 104   2          temp=TH1;
 105   2          temp=(temp<<8)+TL1;
 106   2          
 107   2        //  temp=(TH1<<8)+TL1;    //计算这段时间内 TCS230 的输出脉冲数  
 108   2          temp/=rp;     
 109   2          R = temp;
 110   2          
 111   2      //    conversion(temp);
 112   2      //    disp_R[2]=ge;         //因为这次的中断，是上次选择滤波器的数值
 113   2      //    disp_R[1]=shi;
 114   2      //    disp_R[0]=bai;
 115   2        } 
 116   1        else if(count==1)
C51 COMPILER V9.57.0.0   MYSELF                                                            02/28/2019 09:41:20 PAGE 3   

 117   1        {            
 118   2          count++;
 119   2          s2=0;s3=1;            //选择滤波器为蓝色
 120   2        //  temp=(TH1<<8)+TL1;    //计算这段时间内 TCS230 的输出脉冲数  
 121   2          //  temp=(8<<TH1)+TL1;
 122   2          
 123   2          temp=TH1;
 124   2          temp=(temp<<8)+TL1;
 125   2          
 126   2        temp/=gp; 
 127   2          G = temp;
 128   2      //        if(G>0xFF)
 129   2      //      G=0xFF;   temp/=bp
 130   2      //    conversion(temp);
 131   2      //    disp_G[2]=ge;         //因为这次的中断，是上次选择滤波器的数值
 132   2      //    disp_G[1]=shi;
 133   2      //    disp_G[0]=bai;
 134   2        } 
 135   1        else if(count==2)
 136   1        {            
 137   2          count=0;
 138   2          s2=0;s3=0;            //选择滤波器为红色
 139   2          
 140   2          //  temp=(8<<TH1)+TL1;
 141   2          
 142   2          //temp=(TH1<<8)+TL1;    //计算这段时间内 TCS230 的输出脉冲数  
 143   2          
 144   2          temp=TH1;
 145   2          temp=(temp<<8)+TL1;
 146   2          temp/=bp; 
 147   2          Bl = temp;
 148   2      //        if(Bl>0xFF)
 149   2      //      Bl=0xFF;
 150   2      //    conversion(temp);
 151   2      //    disp_B[2]=ge;         //因为这次的中断，是上次选择滤波器的数值
 152   2      //    disp_B[1]=shi;
 153   2      //    disp_B[0]=bai;  
 154   2          
 155   2        }
 156   1        //定时器计数器重赋初值
 157   1      //  TH0=0xE0;
 158   1      //  TL0=0x00; //11。0592M 晶振，为10ms
 159   1      //  TL0 = 0x00;   //设置定时初值
 160   1      //  TH0 = 0xDC;   //设置定时初值
 161   1        
 162   1        TL1=0x00;//计数器清零
 163   1        TH1=0x00;//计数器清零
 164   1        TR0=1;   //打开定时器
 165   1        TR1=1;   //打开计数器
 166   1      }
 167          
 168          
 169          
 170          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    227    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13       4
C51 COMPILER V9.57.0.0   MYSELF                                                            02/28/2019 09:41:20 PAGE 4   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
